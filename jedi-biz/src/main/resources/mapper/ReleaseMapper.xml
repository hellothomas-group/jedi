<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.hellothomas.jedi.biz.infrastructure.mapper.ReleaseMapper">
  <resultMap id="BaseResultMap" type="xyz.hellothomas.jedi.biz.domain.Release">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="release_key" jdbcType="VARCHAR" property="releaseKey" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="namespace_name" jdbcType="VARCHAR" property="namespaceName" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="executor_name" jdbcType="VARCHAR" property="executorName" />
    <result column="is_abandoned" jdbcType="BIT" property="isAbandoned" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="data_change_created_by" jdbcType="VARCHAR" property="dataChangeCreatedBy" />
    <result column="data_change_created_time" jdbcType="TIMESTAMP" property="dataChangeCreatedTime" />
    <result column="data_change_last_modified_by" jdbcType="VARCHAR" property="dataChangeLastModifiedBy" />
    <result column="data_change_last_modified_time" jdbcType="TIMESTAMP" property="dataChangeLastModifiedTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="xyz.hellothomas.jedi.biz.domain.Release">
    <result column="configurations" jdbcType="LONGVARCHAR" property="configurations" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, release_key, name, comment, namespace_name, app_id, executor_name, is_abandoned, 
    is_deleted, data_change_created_by, data_change_created_time, data_change_last_modified_by, 
    data_change_last_modified_time
  </sql>
  <sql id="Blob_Column_List">
    configurations
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="xyz.hellothomas.jedi.biz.domain.ReleaseExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from `release`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="xyz.hellothomas.jedi.biz.domain.ReleaseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `release`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from `release`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `release`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="xyz.hellothomas.jedi.biz.domain.ReleaseExample">
    delete from `release`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="xyz.hellothomas.jedi.biz.domain.Release" useGeneratedKeys="true" keyProperty="id">
    insert into `release` (id, release_key, name, 
      comment, namespace_name, app_id, 
      executor_name, is_abandoned, is_deleted, 
      data_change_created_by, data_change_created_time, 
      data_change_last_modified_by, data_change_last_modified_time, 
      configurations)
    values (#{id,jdbcType=BIGINT}, #{releaseKey,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{comment,jdbcType=VARCHAR}, #{namespaceName,jdbcType=VARCHAR}, #{appId,jdbcType=VARCHAR}, 
      #{executorName,jdbcType=VARCHAR}, #{isAbandoned,jdbcType=BIT}, #{isDeleted,jdbcType=BIT}, 
      #{dataChangeCreatedBy,jdbcType=VARCHAR}, #{dataChangeCreatedTime,jdbcType=TIMESTAMP}, 
      #{dataChangeLastModifiedBy,jdbcType=VARCHAR}, #{dataChangeLastModifiedTime,jdbcType=TIMESTAMP}, 
      #{configurations,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="xyz.hellothomas.jedi.biz.domain.Release" useGeneratedKeys="true" keyProperty="id">
    insert into `release`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="releaseKey != null">
        release_key,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="namespaceName != null">
        namespace_name,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="executorName != null">
        executor_name,
      </if>
      <if test="isAbandoned != null">
        is_abandoned,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="dataChangeCreatedBy != null">
        data_change_created_by,
      </if>
      <if test="dataChangeCreatedTime != null">
        data_change_created_time,
      </if>
      <if test="dataChangeLastModifiedBy != null">
        data_change_last_modified_by,
      </if>
      <if test="dataChangeLastModifiedTime != null">
        data_change_last_modified_time,
      </if>
      <if test="configurations != null">
        configurations,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="releaseKey != null">
        #{releaseKey,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="namespaceName != null">
        #{namespaceName,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="executorName != null">
        #{executorName,jdbcType=VARCHAR},
      </if>
      <if test="isAbandoned != null">
        #{isAbandoned,jdbcType=BIT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="dataChangeCreatedBy != null">
        #{dataChangeCreatedBy,jdbcType=VARCHAR},
      </if>
      <if test="dataChangeCreatedTime != null">
        #{dataChangeCreatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dataChangeLastModifiedBy != null">
        #{dataChangeLastModifiedBy,jdbcType=VARCHAR},
      </if>
      <if test="dataChangeLastModifiedTime != null">
        #{dataChangeLastModifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="configurations != null">
        #{configurations,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="xyz.hellothomas.jedi.biz.domain.ReleaseExample" resultType="java.lang.Long">
    select count(*) from `release`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `release`
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.releaseKey != null">
        release_key = #{record.releaseKey,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.namespaceName != null">
        namespace_name = #{record.namespaceName,jdbcType=VARCHAR},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.executorName != null">
        executor_name = #{record.executorName,jdbcType=VARCHAR},
      </if>
      <if test="record.isAbandoned != null">
        is_abandoned = #{record.isAbandoned,jdbcType=BIT},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.dataChangeCreatedBy != null">
        data_change_created_by = #{record.dataChangeCreatedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.dataChangeCreatedTime != null">
        data_change_created_time = #{record.dataChangeCreatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dataChangeLastModifiedBy != null">
        data_change_last_modified_by = #{record.dataChangeLastModifiedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.dataChangeLastModifiedTime != null">
        data_change_last_modified_time = #{record.dataChangeLastModifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.configurations != null">
        configurations = #{record.configurations,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update `release`
    set id = #{record.id,jdbcType=BIGINT},
      release_key = #{record.releaseKey,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      comment = #{record.comment,jdbcType=VARCHAR},
      namespace_name = #{record.namespaceName,jdbcType=VARCHAR},
      app_id = #{record.appId,jdbcType=VARCHAR},
      executor_name = #{record.executorName,jdbcType=VARCHAR},
      is_abandoned = #{record.isAbandoned,jdbcType=BIT},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
      data_change_created_by = #{record.dataChangeCreatedBy,jdbcType=VARCHAR},
      data_change_created_time = #{record.dataChangeCreatedTime,jdbcType=TIMESTAMP},
      data_change_last_modified_by = #{record.dataChangeLastModifiedBy,jdbcType=VARCHAR},
      data_change_last_modified_time = #{record.dataChangeLastModifiedTime,jdbcType=TIMESTAMP},
      configurations = #{record.configurations,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `release`
    set id = #{record.id,jdbcType=BIGINT},
      release_key = #{record.releaseKey,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      comment = #{record.comment,jdbcType=VARCHAR},
      namespace_name = #{record.namespaceName,jdbcType=VARCHAR},
      app_id = #{record.appId,jdbcType=VARCHAR},
      executor_name = #{record.executorName,jdbcType=VARCHAR},
      is_abandoned = #{record.isAbandoned,jdbcType=BIT},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
      data_change_created_by = #{record.dataChangeCreatedBy,jdbcType=VARCHAR},
      data_change_created_time = #{record.dataChangeCreatedTime,jdbcType=TIMESTAMP},
      data_change_last_modified_by = #{record.dataChangeLastModifiedBy,jdbcType=VARCHAR},
      data_change_last_modified_time = #{record.dataChangeLastModifiedTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="xyz.hellothomas.jedi.biz.domain.Release">
    update `release`
    <set>
      <if test="releaseKey != null">
        release_key = #{releaseKey,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="namespaceName != null">
        namespace_name = #{namespaceName,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="executorName != null">
        executor_name = #{executorName,jdbcType=VARCHAR},
      </if>
      <if test="isAbandoned != null">
        is_abandoned = #{isAbandoned,jdbcType=BIT},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="dataChangeCreatedBy != null">
        data_change_created_by = #{dataChangeCreatedBy,jdbcType=VARCHAR},
      </if>
      <if test="dataChangeCreatedTime != null">
        data_change_created_time = #{dataChangeCreatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dataChangeLastModifiedBy != null">
        data_change_last_modified_by = #{dataChangeLastModifiedBy,jdbcType=VARCHAR},
      </if>
      <if test="dataChangeLastModifiedTime != null">
        data_change_last_modified_time = #{dataChangeLastModifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="configurations != null">
        configurations = #{configurations,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="xyz.hellothomas.jedi.biz.domain.Release">
    update `release`
    set release_key = #{releaseKey,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      namespace_name = #{namespaceName,jdbcType=VARCHAR},
      app_id = #{appId,jdbcType=VARCHAR},
      executor_name = #{executorName,jdbcType=VARCHAR},
      is_abandoned = #{isAbandoned,jdbcType=BIT},
      is_deleted = #{isDeleted,jdbcType=BIT},
      data_change_created_by = #{dataChangeCreatedBy,jdbcType=VARCHAR},
      data_change_created_time = #{dataChangeCreatedTime,jdbcType=TIMESTAMP},
      data_change_last_modified_by = #{dataChangeLastModifiedBy,jdbcType=VARCHAR},
      data_change_last_modified_time = #{dataChangeLastModifiedTime,jdbcType=TIMESTAMP},
      configurations = #{configurations,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="xyz.hellothomas.jedi.biz.domain.Release">
    update `release`
    set release_key = #{releaseKey,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      namespace_name = #{namespaceName,jdbcType=VARCHAR},
      app_id = #{appId,jdbcType=VARCHAR},
      executor_name = #{executorName,jdbcType=VARCHAR},
      is_abandoned = #{isAbandoned,jdbcType=BIT},
      is_deleted = #{isDeleted,jdbcType=BIT},
      data_change_created_by = #{dataChangeCreatedBy,jdbcType=VARCHAR},
      data_change_created_time = #{dataChangeCreatedTime,jdbcType=TIMESTAMP},
      data_change_last_modified_by = #{dataChangeLastModifiedBy,jdbcType=VARCHAR},
      data_change_last_modified_time = #{dataChangeLastModifiedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="findFirstByNamespaceNameAndAppIdAndExecutorNameAndIsAbandonedFalseOrderByIdDesc" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from `release`
    where namespace_name = #{namespaceName,jdbcType=VARCHAR} and app_id = #{appId,jdbcType=VARCHAR}
    and executor_name = #{executorName,jdbcType=VARCHAR} and is_abandoned = '0'
    order by id desc limit 1
  </select>
</mapper>