<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.hellothomas.jedi.consumer.infrastructure.mapper.ExecutorTaskMessageMapper">
  <resultMap id="BaseResultMap" type="xyz.hellothomas.jedi.consumer.domain.ExecutorTaskMessage">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="namespace" jdbcType="VARCHAR" property="namespace" />
    <result column="message_type" jdbcType="VARCHAR" property="messageType" />
    <result column="pool_name" jdbcType="VARCHAR" property="poolName" />
    <result column="task_name" jdbcType="VARCHAR" property="taskName" />
    <result column="wait_time" jdbcType="BIGINT" property="waitTime" />
    <result column="execution_time" jdbcType="BIGINT" property="executionTime" />
    <result column="is_success" jdbcType="BIT" property="isSuccess" />
    <result column="failure_reason" jdbcType="VARCHAR" property="failureReason" />
    <result column="task_extra_data" jdbcType="VARCHAR" property="taskExtraData" />
    <result column="host" jdbcType="VARCHAR" property="host" />
    <result column="record_time" jdbcType="TIMESTAMP" property="recordTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, app_id, namespace, message_type, pool_name, task_name, wait_time, execution_time,
    is_success, failure_reason, task_extra_data, host, record_time, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="xyz.hellothomas.jedi.consumer.domain.ExecutorTaskMessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from executor_task_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from executor_task_message
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from executor_task_message
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="xyz.hellothomas.jedi.consumer.domain.ExecutorTaskMessageExample">
    delete from executor_task_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="xyz.hellothomas.jedi.consumer.domain.ExecutorTaskMessage">
    insert into executor_task_message (id, app_id, namespace,
      message_type, pool_name, task_name,
      wait_time, execution_time, is_success,
      failure_reason, task_extra_data, host,
      record_time, create_time, update_time)
    values (#{id,jdbcType=VARCHAR}, #{appId,jdbcType=VARCHAR}, #{namespace,jdbcType=VARCHAR},
      #{messageType,jdbcType=VARCHAR}, #{poolName,jdbcType=VARCHAR}, #{taskName,jdbcType=VARCHAR},
      #{waitTime,jdbcType=BIGINT}, #{executionTime,jdbcType=BIGINT}, #{isSuccess,jdbcType=BIT},
      #{failureReason,jdbcType=VARCHAR}, #{taskExtraData,jdbcType=VARCHAR}, #{host,jdbcType=VARCHAR},
      #{recordTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="xyz.hellothomas.jedi.consumer.domain.ExecutorTaskMessage">
    insert into executor_task_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="namespace != null">
        namespace,
      </if>
      <if test="messageType != null">
        message_type,
      </if>
      <if test="poolName != null">
        pool_name,
      </if>
      <if test="taskName != null">
        task_name,
      </if>
      <if test="waitTime != null">
        wait_time,
      </if>
      <if test="executionTime != null">
        execution_time,
      </if>
      <if test="isSuccess != null">
        is_success,
      </if>
      <if test="failureReason != null">
        failure_reason,
      </if>
      <if test="taskExtraData != null">
        task_extra_data,
      </if>
      <if test="host != null">
        host,
      </if>
      <if test="recordTime != null">
        record_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="namespace != null">
        #{namespace,jdbcType=VARCHAR},
      </if>
      <if test="messageType != null">
        #{messageType,jdbcType=VARCHAR},
      </if>
      <if test="poolName != null">
        #{poolName,jdbcType=VARCHAR},
      </if>
      <if test="taskName != null">
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="waitTime != null">
        #{waitTime,jdbcType=BIGINT},
      </if>
      <if test="executionTime != null">
        #{executionTime,jdbcType=BIGINT},
      </if>
      <if test="isSuccess != null">
        #{isSuccess,jdbcType=BIT},
      </if>
      <if test="failureReason != null">
        #{failureReason,jdbcType=VARCHAR},
      </if>
      <if test="taskExtraData != null">
        #{taskExtraData,jdbcType=VARCHAR},
      </if>
      <if test="host != null">
        #{host,jdbcType=VARCHAR},
      </if>
      <if test="recordTime != null">
        #{recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="xyz.hellothomas.jedi.consumer.domain.ExecutorTaskMessageExample" resultType="java.lang.Long">
    select count(*) from executor_task_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update executor_task_message
    update executor_task_message
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.namespace != null">
        namespace = #{record.namespace,jdbcType=VARCHAR},
      </if>
      <if test="record.messageType != null">
        message_type = #{record.messageType,jdbcType=VARCHAR},
      </if>
      <if test="record.poolName != null">
        pool_name = #{record.poolName,jdbcType=VARCHAR},
      </if>
      <if test="record.taskName != null">
        task_name = #{record.taskName,jdbcType=VARCHAR},
      </if>
      <if test="record.waitTime != null">
        wait_time = #{record.waitTime,jdbcType=BIGINT},
      </if>
      <if test="record.executionTime != null">
        execution_time = #{record.executionTime,jdbcType=BIGINT},
      </if>
      <if test="record.isSuccess != null">
        is_success = #{record.isSuccess,jdbcType=BIT},
      </if>
      <if test="record.failureReason != null">
        failure_reason = #{record.failureReason,jdbcType=VARCHAR},
      </if>
      <if test="record.taskExtraData != null">
        task_extra_data = #{record.taskExtraData,jdbcType=VARCHAR},
      </if>
      <if test="record.host != null">
        host = #{record.host,jdbcType=VARCHAR},
      </if>
      <if test="record.recordTime != null">
        record_time = #{record.recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update executor_task_message
    set id = #{record.id,jdbcType=VARCHAR},
      app_id = #{record.appId,jdbcType=VARCHAR},
      namespace = #{record.namespace,jdbcType=VARCHAR},
      message_type = #{record.messageType,jdbcType=VARCHAR},
      pool_name = #{record.poolName,jdbcType=VARCHAR},
      task_name = #{record.taskName,jdbcType=VARCHAR},
      wait_time = #{record.waitTime,jdbcType=BIGINT},
      execution_time = #{record.executionTime,jdbcType=BIGINT},
      is_success = #{record.isSuccess,jdbcType=BIT},
      failure_reason = #{record.failureReason,jdbcType=VARCHAR},
      task_extra_data = #{record.taskExtraData,jdbcType=VARCHAR},
      host = #{record.host,jdbcType=VARCHAR},
      record_time = #{record.recordTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="xyz.hellothomas.jedi.consumer.domain.ExecutorTaskMessage">
    update executor_task_message
    <set>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="namespace != null">
        namespace = #{namespace,jdbcType=VARCHAR},
      </if>
      <if test="messageType != null">
        message_type = #{messageType,jdbcType=VARCHAR},
      </if>
      <if test="poolName != null">
        pool_name = #{poolName,jdbcType=VARCHAR},
      </if>
      <if test="taskName != null">
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="waitTime != null">
        wait_time = #{waitTime,jdbcType=BIGINT},
      </if>
      <if test="executionTime != null">
        execution_time = #{executionTime,jdbcType=BIGINT},
      </if>
      <if test="isSuccess != null">
        is_success = #{isSuccess,jdbcType=BIT},
      </if>
      <if test="failureReason != null">
        failure_reason = #{failureReason,jdbcType=VARCHAR},
      </if>
      <if test="taskExtraData != null">
        task_extra_data = #{taskExtraData,jdbcType=VARCHAR},
      </if>
      <if test="host != null">
        host = #{host,jdbcType=VARCHAR},
      </if>
      <if test="recordTime != null">
        record_time = #{recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="xyz.hellothomas.jedi.consumer.domain.ExecutorTaskMessage">
    update executor_task_message
    set app_id = #{appId,jdbcType=VARCHAR},
      namespace = #{namespace,jdbcType=VARCHAR},
      message_type = #{messageType,jdbcType=VARCHAR},
      pool_name = #{poolName,jdbcType=VARCHAR},
      task_name = #{taskName,jdbcType=VARCHAR},
      wait_time = #{waitTime,jdbcType=BIGINT},
      execution_time = #{executionTime,jdbcType=BIGINT},
      is_success = #{isSuccess,jdbcType=BIT},
      failure_reason = #{failureReason,jdbcType=VARCHAR},
      task_extra_data = #{taskExtraData,jdbcType=VARCHAR},
      host = #{host,jdbcType=VARCHAR},
      record_time = #{recordTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <resultMap id="ExecutorTaskResultMap" type="xyz.hellothomas.jedi.consumer.domain.pojo.ExecutorTask">
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="namespace" jdbcType="VARCHAR" property="namespaceName" />
    <result column="pool_name" jdbcType="VARCHAR" property="executorName" />
    <result column="task_name" jdbcType="VARCHAR" property="taskName" />
  </resultMap>

  <select id="selectByRecordTimeAndGroupByTask" resultMap="ExecutorTaskResultMap">
    select
    app_id, namespace, pool_name, task_name
    from executor_task_message
    where record_time >= #{startTime,jdbcType=TIMESTAMP} and record_time <![CDATA[<]]> #{endTime,jdbcType=TIMESTAMP}
    group by namespace, app_id, pool_name, task_name
  </select>

  <resultMap id="ExecutorTaskStatisticsResultMap" type="xyz.hellothomas.jedi.consumer.domain.ExecutorTaskStatistics">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="statistics_date" jdbcType="DATE" property="statisticsDate" />
    <result column="namespace_name" jdbcType="VARCHAR" property="namespaceName" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="executor_name" jdbcType="VARCHAR" property="executorName" />
    <result column="task_name" jdbcType="VARCHAR" property="taskName" />
    <result column="total" jdbcType="INTEGER" property="total" />
    <result column="failure" jdbcType="INTEGER" property="failure" />
    <result column="failure_ratio" jdbcType="DECIMAL" property="failureRatio" />
    <result column="total_time_max" jdbcType="BIGINT" property="totalTimeMax" />
    <result column="total_time_min" jdbcType="BIGINT" property="totalTimeMin" />
    <result column="wait_time_max" jdbcType="BIGINT" property="waitTimeMax" />
    <result column="wait_time_min" jdbcType="BIGINT" property="waitTimeMin" />
    <result column="execution_time_max" jdbcType="INTEGER" property="executionTimeMax" />
    <result column="execution_time_min" jdbcType="INTEGER" property="executionTimeMin" />
    <result column="execution_time_line_95" jdbcType="INTEGER" property="executionTimeLine95" />
    <result column="execution_time_line_99" jdbcType="INTEGER" property="executionTimeLine99" />
    <result column="data_change_created_time" jdbcType="TIMESTAMP" property="dataChangeCreatedTime" />
    <result column="data_change_last_modified_time" jdbcType="TIMESTAMP" property="dataChangeLastModifiedTime" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>

  <select id="selectStatisticsByUniqueKeyAndRecordTime" resultMap="ExecutorTaskStatisticsResultMap">
    select
    app_id, namespace as namespace_name, pool_name as executor_name, task_name,
    count(id) as total,
    count(case when is_success = 0 then 1 else null end) as failure,
    max(wait_time + execution_time) as total_time_max,
    min(wait_time + execution_time) as total_time_min,
    max(wait_time) as wait_time_max,
    min(wait_time) as wait_time_min,
    max(execution_time) as execution_time_max,
    min(execution_time) as execution_time_min,
    0 as execution_time_line_95,
    0 as execution_time_line_99
    from executor_task_message
    where namespace = #{namespaceName,jdbcType=VARCHAR} and
      app_id = #{appId,jdbcType=VARCHAR} and
      pool_name = #{executorName,jdbcType=VARCHAR} and
      task_name = #{taskName,jdbcType=VARCHAR} and
      record_time >= #{startTime,jdbcType=TIMESTAMP} and record_time <![CDATA[<]]> #{endTime,jdbcType=TIMESTAMP}
  </select>

  <insert id="insertBatch" parameterType="java.util.List">
    insert into executor_task_message (id, app_id, namespace,
    message_type, pool_name, task_name,
    wait_time, execution_time, is_success,
    failure_reason, task_extra_data, host,
    record_time, create_time, update_time)
    values
    <foreach collection="records" item="record" separator=",">
      (#{record.id,jdbcType=VARCHAR}, #{record.appId,jdbcType=VARCHAR}, #{record.namespace,jdbcType=VARCHAR},
      #{record.messageType,jdbcType=VARCHAR}, #{record.poolName,jdbcType=VARCHAR}, #{record.taskName,jdbcType=VARCHAR},
      #{record.waitTime,jdbcType=BIGINT}, #{record.executionTime,jdbcType=BIGINT}, #{record.isSuccess,jdbcType=BIT},
      #{record.failureReason,jdbcType=VARCHAR}, #{record.taskExtraData,jdbcType=VARCHAR}, #{record.host,jdbcType=VARCHAR},
      #{record.recordTime,jdbcType=TIMESTAMP}, #{record.createTime,jdbcType=TIMESTAMP}, #{record.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
</mapper>
